/* ============== DELEÇÃO DAS TABELAS ============== */

DROP TABLE IF EXISTS orders_has_users;  /* 1 */
DROP TABLE IF EXISTS service_orders; /* 2 */
DROP TABLE IF EXISTS users; /* 3 */
DROP TABLE IF EXISTS user_complementary_data; /* 4 */
DROP TABLE IF EXISTS address; /* 5 */
DROP TABLE IF EXISTS profile_has_module; /* 6 */
DROP TABLE IF EXISTS profile; /* 7 */
DROP TABLE IF EXISTS module; /* 8 */

/* ============== CRIAÇÃO DAS TABELAS ============== */

/* TABELA DE MÓDULOS */
CREATE TABLE module(
	id int not null auto_increment,
    nome VARCHAR(45) NOT NULL,
    PRIMARY KEY(id)
);

/* TABELA DE PERFIS DE USUÁRIO */
CREATE TABLE profile(
	id int not null auto_increment,
    nome varchar(45) not null,
    acesso_geral int not null,
    dh_atualizacao DATETIME DEFAULT NULL,
    dh_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id)
);

/* TABELA DE RELACIONAMENTO PERFIS-MÓDULOS */
CREATE TABLE profile_has_module(
	id_modulo int not null,
    id_perfil int not null,
    ler boolean not null,
    escrever boolean not null,
    FOREIGN KEY(id_modulo) REFERENCES module(id),
    FOREIGN KEY(id_perfil) REFERENCES profile(id)
);

/* TABELA DE ENDEREÇOS */
CREATE TABLE address(
	id int not null auto_increment,
    logradouro varchar(45),
    numero varchar(45),
    cep varchar(45),
    cidade varchar(45),
    estado varchar(45),
	complemento varchar(45),
    PRIMARY KEY(id)
);

/* TABELA DOS DADOS DE CADASTRO COMPLEMENTARES */
CREATE TABLE user_complementary_data(
	id int not null auto_increment,
    habANAC varchar(45),
    CPF varchar(45),
    CNPJ varchar(45),
    telefone varchar(45),
    celular varchar(45),
    razaoSocial varchar(45),
    nomeFantasia varchar(45),
    id_endereco int,
    PRIMARY KEY(id),
    FOREIGN KEY(id_endereco) REFERENCES address(id)
);

/* TABELA DOS USUÁRIOS */
CREATE TABLE users(
	id int not null auto_increment,
	nome varchar(45) not null,
    email varchar(45) not null,
    senha varchar(200) not null,
    status boolean not null DEFAULT false,
    token varchar(45),
    id_perfil int not null,
    id_dados_complementares int,
    dh_ultimo_acesso DATETIME DEFAULT NULL,
    dh_atualizacao DATETIME DEFAULT NULL,
    dh_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(id),
    FOREIGN KEY(id_perfil) REFERENCES profile(id),
	FOREIGN KEY(id_dados_complementares) REFERENCES user_complementary_data(id) 
);

/* TABELA DAS ORDENS DE SERVIÇO */
CREATE TABLE service_orders(
	  id INT NOT NULL AUTO_INCREMENT,
	  numOS VARCHAR(45) UNIQUE DEFAULT NULL,
	  dh_criacao DATETIME DEFAULT CURRENT_TIMESTAMP,
	  dh_alteracao VARCHAR(45) DEFAULT NULL,
	  dh_inicio DATETIME NOT NULL,
	  dh_fim DATETIME NOT NULL,
	  situacao VARCHAR(45) NOT NULL,
	  observacoes VARCHAR(200),
	  nome_criador VARCHAR(45) NOT NULL,
	  nome_piloto VARCHAR(45) NOT NULL,
	  nome_cliente VARCHAR(45) NOT NULL,
	PRIMARY KEY(id)
);

/* TABELA DO RELACIONAMENTO ORDENS-USUÁRIOS */
CREATE TABLE orders_has_users(
	id_ordem_servico INT NOT NULL,
    id_usuario INT NOT NULL,
    FOREIGN KEY(id_ordem_servico) REFERENCES profile(id),
    FOREIGN KEY(id_usuario) REFERENCES users(id)
);